{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAGFF,EAAQ,CAAEH,WAAUC,UAIpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAfPL,EAAKa,iBAAiB,UAmBtB,SAA0BC,GACxBA,EAAEC,iBAMF,IAJA,IAAMC,EAAmBhB,EAAKiB,SAASC,OAAOC,MAC1CC,EAAkBC,OAAOrB,EAAKiB,SAASZ,MAAMc,OAC3CG,EAAiBD,OAAOrB,EAAKiB,SAASM,KAAKJ,OAExCK,EAAI,EAAGA,GAAKR,EAAkBQ,GAAK,EAC1CrB,EAAcqB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,QAAQC,IAAI,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE3DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,QAAQC,IAAI,sBAAqCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAG3De,GAAmBE,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n\n        resolve({ position, delay });\n      } else {\n        // Reject\n\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromises(e) {\n  e.preventDefault();\n\n  const amountInputValue = form.elements.amount.value;\n  let delayInputValue = Number(form.elements.delay.value);\n  const stepInputValue = Number(form.elements.step.value);\n\n  for (let i = 1; i <= amountInputValue; i += 1) {\n    createPromise(i, delayInputValue)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInputValue += stepInputValue;\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amountInputValue","elements","amount","value","delayInputValue","Number","stepInputValue","step","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.f22ee5e7.js.map"}